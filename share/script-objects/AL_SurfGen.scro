# Amira-Script-Object 620
# L. Schuring 1/2025

#########################################################################
# CONSTRUCTOR: This method sets up the script module in Amira
#########################################################################
$this proc constructor {} {
	$this data setLabel "Label File"
	$this newPortIntTextN desiredFaceN 1
	$this desiredFaceN setMinMax 0 900000
	$this desiredFaceN setValue 0
	$this newPortDirectory outputDir
	$this newPortDoIt "ApplyButton"	
	$this ApplyButton setVisibility 0
	$this testBreak breakButton
  }
  
#########################################################################
# DESTRUCTOR: Place-holder for now. Useful for clean-up
#########################################################################
$this proc destructor { } {

remove "Generate Surface" "finalSmooth" "Surface0" "Smooth0" "Surface1" "Smooth1" "Surface2" "Smooth2" "Surface3" "Smooth3" "Surface4" "Smooth4" "Surface5" "Smooth5" "Surface6" "Smooth6" "Surface7" "Smooth7" "Surface8" "Smooth8" "Surface9" "Smooth9" "Surface10" "Smooth10"

}
#########################################################################
# COMPUTE: Once desiredFaceN is edited and the user presses enter, the compute method starts 
#########################################################################
$this proc compute {} {
	set desiredFaceN [$this desiredFaceN getValue]
	set labelFile [$this data source] 
	set outputDir [$this outputDir getValue]
	if {[$this data getState] != "disconnect" & $desiredFaceN > 0} {
		$this ApplyButton setVisibility 1
	}
	
	if {[$this ApplyButton wasHit 0] & $desiredFaceN > 0} {
		echo "The desiredFaceN is $desiredFaceN"	
		echo "outputDir: $outputDir"
		global AMIRA_LOCAL
		global hideNewModules
		source "$AMIRA_LOCAL/share/script-objects/AL_SurfGen.hx"
	}
}