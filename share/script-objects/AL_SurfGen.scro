# Amira-Script-Object 620
# L. Schuring 1/2025

#########################################################################
# CONSTRUCTOR: This method sets up the script module in Amira
#########################################################################
$this proc constructor {} {
	$this data setLabel "Label File"
	$this newPortIntTextN desiredFaceN 1
	$this desiredFaceN setMinMax 0 900000
	$this desiredFaceN setValue 0
	$this newPortDirectory outputDir
	$this newPortDoIt "ApplyButton"	
	$this ApplyButton setVisibility 0
	$this testBreak breakButton
  }

#########################################################################
# CLEANUP: 
# This procedure removes any intermediate modules that were generated by the script
#########################################################################
proc cleanUp {beforeMods} {
	#echo "BeforeMods: $beforeMods"
	set afterMods [all -hidden]
	#echo "AfterMods: $afterMods"

	# Initialize an empty list for removal of intermediate modules
	set delMods ""
	# Iterate over each element in afterMods, and compare to beforeMods to determine if it needs to be deleted
	foreach item $afterMods {
	    # Check if the item is not in startList
	    if {[lsearch -exact $beforeMods $item] == -1} {
	        # Append the item to delMod
	        lappend delMods $item
	    }
	}
	
	# remove intermediate mods
	foreach item $delMods {
		remove $item
	}
}  

#########################################################################
# DESTRUCTOR: Place-holder for now. Useful for clean-up
#########################################################################
$this proc destructor { } {
}
#########################################################################
# COMPUTE: Once desiredFaceN is edited and the user presses enter, the compute method starts 
#########################################################################
$this proc compute {} {
	# define variables to be used by AL-SurfGen.hx script
	set desiredFaceN [$this desiredFaceN getValue]
	set labelFile [$this data source] 
	set outputDir [$this outputDir getValue]

	# checks that data and desiredFaceN inputs are provided before making Apply button visible
	if {[$this data getState] != "disconnect" & $desiredFaceN > 0} {
		$this ApplyButton setVisibility 1
	}
	
	if {[$this ApplyButton wasHit 0] & $desiredFaceN > 0} {
		echo "The desiredFaceN is $desiredFaceN"	
		echo "outputDir: $outputDir"

		# identify current hidden modules in Amira so that intermediate modules can be deleted after running script		
		set beforeMods [all -hidden]
		global hideNewModules
		set hideNewModules 1

		# Define script location relative to global variable, AMIRA_LOCAL
		global AMIRA_LOCAL
		source "$AMIRA_LOCAL/share/script-objects/AL_SurfGen.tcl"

		# After script runs, run clean-up procedure to remove hidden intermediate modules
		set hideNewModules 0
		cleanUp $beforeMods
	}
}