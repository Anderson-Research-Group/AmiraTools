# Amira-Script-Object 601
# L. Schuring 1/2025

#########################################################################
# CONSTRUCTOR: This method sets up the script module in Amira
#########################################################################
$this proc constructor {} {
	$this data setLabel "Label or Surface File"
	$this newPortConnection imageStack HxUniformScalarField3 
	$this imageStack setLabel "Image Stack"
	$this newPortDirectory outputDir
	$this newPortDoIt "ApplyButton"
	$this ApplyButton setVisibility 0
  }
  
#########################################################################
# DESTRUCTOR: Place-holder for now. Useful for clean-up
#########################################################################
$this proc destructor { } {
}

#########################################################################
# CLEANUP: 
# This procedure removes any intermediate modules that were generated by the script
#########################################################################
proc cleanUp {beforeMods} {
	echo $beforeMods
	set afterMods [all -hidden]
	echo $afterMods

	# Initialize an empty list for removal of intermediate modules
	set delMods ""

	# Iterate over each element in afterMods, and compare to beforeMods to determine if it needs to be deleted
	foreach item $afterMods {
	    # Check if the item is not in startList
	    if {[lsearch -exact $beforeMods $item] == -1} {
	        # Append the item to delMod
	        lappend delMods $item
	    }
	}
	
	# remove intermediate mods
	foreach item $delMods {
		remove $item
	}
}

#########################################################################
# COMPUTE: Once desiredFaceN is edited and the user presses enter, the compute method starts 
#########################################################################
$this proc compute {} {
	# define variables to be used by AL_CreateDRR.hx
		set surfFile [$this data source]
		set imageStack [$this imageStack source]
		set outputDir [$this outputDir getValue]

	#check that Amira is not 6.2.0
	if { [app version] == "Amira 6.2.0" } {
		theMsg error "ERROR! Amira 6.2.0 creates DRRs that are not compatible with mtwtesla"
	}

	# Turn on Apply button visibility if all required inputs are given 
	if {[$this data getState] != "disconnect" & [$this imageStack getState] != "disconnect" & [llength $outputDir]> 0} {
		$this ApplyButton setVisibility 1
	}

	if { [$this ApplyButton wasHit 0] } {
		
		# identify current hidden modules in Amira so that intermediate modules can be deleted after running script
		set beforeMods [all -hidden]
		global hideNewModules
		set hideNewModules 1
		
		# Define script location relative to global variable, AMIRA_LOCAL
		global AMIRA_LOCAL
		source "$AMIRA_LOCAL/share/script-objects/AL_CreateDRR.hx"

		# After script runs, run cleanUp procedure to remove hidden Intermediate modules
		set hideNewModules 0
		cleanUp $beforeMods
	}
}


 